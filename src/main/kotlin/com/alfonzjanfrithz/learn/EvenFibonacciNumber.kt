package com.alfonzjanfrithz.learn

/*
Problem 2: Even Fibonacci Numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence that do not exceed the nth term, find the sum of the even-valued terms.
 */

fun sumOfEvenFibonnacciNumber(numOfFibonacciElements: Int): Int {
    return getFibonacciList(numOfFibonacciElements).filter { it % 2 == 0 }.sum()
}

/**
 * The next number is generated by adding the previous two number
 */
fun getFibonacciList(numOfFibonacci: Int): List<Int> {
    val listOfFibonacci = mutableListOf<Int>(1, 2)
    for (idx in 1..numOfFibonacci - 2) { // the first two elements will always 1 and 2
        listOfFibonacci.add(listOfFibonacci.takeLast(2).sum())
    }

    println("list of Fibonacci elements: $listOfFibonacci")
    return listOfFibonacci
}